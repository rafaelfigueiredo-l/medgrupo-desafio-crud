version: '3.7'

services:
  server:
    container_name: medgrupo_desafio_crud_server
    image: medgrupo_desafio_crud/server:1.0
    build:
      context: ./server
      dockerfile: ./dockerfile
    working_dir: /home/node/app
    restart: always
    depends_on:
      - db
      - pgadmin
    env_file:
      - ./.env
    ports:
      - ${SERVER_HOST}:${SERVER_CONTAINER}
    volumes:
      - ./server:/home/node/app
      - ./server/uploads:/home/node/app/uploads
    environment:
      TEST: 'testing env'
    command: 'yarn run start:dev'
    networks:
      - postgres

  db:
    container_name: medgrupo_desafio_crud_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - postgres

  pgadmin:
    container_name: medgrupo_desafio_crud_admin
    image: dpage/pgadmin4
    logging:
      driver: none
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - db
    ports:
      - '${PGADMIN_HOST}:${PGADMIN_CONTAINER}'
    networks:
      - postgres
    restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
  server:
